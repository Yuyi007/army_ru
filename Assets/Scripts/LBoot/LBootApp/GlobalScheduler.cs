//
// GlobalScheduler.cs
//
// Author:
//       duwenjie
//

//
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections;
using SLua;
using UnityEngine;
using System.Collections.Generic;

namespace LBoot
{
    /// <summary>
    /// GlobalScheduler
    /// </summary>
    [CustomLuaClassAttribute]
    public class GlobalScheduler
    {
        private static SchedulerBehaviour scheduler;
        private static List<int> scheduleIds;

        public static void Init(SchedulerBehaviour scheduler)
        {
            GlobalScheduler.scheduler = scheduler;
            GlobalScheduler.scheduleIds = new List<int>();
        }

        public static int Schedule(float interval, int repeat, Action<int> func)
        {
            return Schedule(interval, repeat, func, false, false);
        }

        public static int Schedule(float interval, int repeat, Action<int> func, bool isPaused, bool isGlobal)
        {
            int id = scheduler.Schedule(interval, repeat, func, isPaused);

            if (!isGlobal)
            {
                scheduleIds.Add(id);
            }

            return id;
        }

        public static void Unschedule(int id)
        {
            scheduler.Unschedule(id);
            scheduleIds.Remove(id);
        }

        public static void UnscheduleAll()
        {
            int[] ids = scheduleIds.ToArray();
            foreach (int id in ids)
            {
                Unschedule(id);
            }
        }

        public static void UnscheduleAllAndGlobal()
        {
            scheduler.UnscheduleAll();
            scheduleIds.Clear();
        }

    }
}

