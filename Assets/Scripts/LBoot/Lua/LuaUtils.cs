//
// LuaUtils.cs
//
// Author:
//       duwenjie
//

//
// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// #define PROFILE_FILE

using UnityEngine;
using System;
using LuaInterface;
using SLua;
using System.Collections.Generic;

namespace LBoot
{
    /// <summary>
    /// Lua utils.
    /// NOTE: This class is handwritten lua bindings, do not generate it
    /// </summary>
    public class LuaUtils : LuaObject
    {
        private static System.Int32 sharedInt32;
        private static System.String sharedString;

        public LuaUtils()
        {
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int constructor(IntPtr l)
        {
            try
            {
                LBoot.LuaUtils o;
                o = new LBoot.LuaUtils();
                pushValue(l, o);
                return 1;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int ByteArrayToLuaString_s(IntPtr l)
        {
            try
            {
                byte[] a1;
                checkType(l, 1, out a1);
                LuaDLL.lua_pushlstring(l, a1, a1.Length);
                return 1;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int ByteArrayLength_s(IntPtr l)
        {
            try
            {
                byte[] a1;
                checkType(l, 1, out a1);
                LuaDLL.lua_pushinteger(l, a1.Length);
                return 1;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int GCCollect_s(IntPtr l)
        {
            try
            {
                int generation;
                checkType(l, 1, out generation);
                if (generation < 0) 
                {
                    generation = System.GC.MaxGeneration;
                }
                System.GC.Collect(generation, System.GCCollectionMode.Forced);
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int GCWaitForPendingFinalizers_s(IntPtr l)
        {
            try
            {
                System.GC.WaitForPendingFinalizers();
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int GetTotalMemory_s(IntPtr l)
        {
            try
            {
                var total = System.GC.GetTotalMemory(false);
                LuaDLL.lua_pushnumber(l, total);
                return 1;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int DisposeLuaTable_s(IntPtr l)
        {
            try
            {
                LuaTable value;
                checkType(l, 1, out value);
                value.Dispose();
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int DisposeLuaFunction_s(IntPtr l)
        {
            try
            {
                LuaFunction value;
                checkType(l, 1, out value);
                value.Dispose();
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int DisposeLuaDelegate_s(IntPtr l)
        {
            try
            {
                LuaDelegate value;
                checkType(l, 1, out value);
                value.Dispose();
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int DisposeLuaThread_s(IntPtr l)
        {
            try
            {
                LuaThread value;
                checkType(l, 1, out value);
                value.Dispose();
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformPositionXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.position;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformLocalPositionXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.localPosition;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformForwardXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.forward;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformRightXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.right;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformUpXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.up;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformEulerAnglesXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.eulerAngles;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformLocalEulerAnglesXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.localEulerAngles;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformLossyScaleXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.lossyScale;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformLocalScaleXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.localScale;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformRotationXYZW_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.rotation;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                LuaDLL.lua_pushnumber(l, v.w);
                return 4;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int TransformLocalRotationXYZW_s(IntPtr l)
        {
            try
            {
                UnityEngine.Transform self = (UnityEngine.Transform)checkSelf(l);
                var v = self.localRotation;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                LuaDLL.lua_pushnumber(l, v.w);
                return 4;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformAnchoredPositionXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.anchoredPosition;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformAnchoredPosition3DXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.anchoredPosition3D;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformAnchorMaxXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.anchorMax;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformAnchorMinXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.anchorMin;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformOffsetMaxXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.offsetMax;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformOffsetMinXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.offsetMin;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformPivotXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.pivot;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformRectXYWH_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.rect;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.width);
                LuaDLL.lua_pushnumber(l, v.height);
                return 4;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectTransformSizeDeltaXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.RectTransform self = (UnityEngine.RectTransform)checkSelf(l);
                var v = self.sizeDelta;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectCenterXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.Rect self = (UnityEngine.Rect)checkSelf(l);
                var v = self.center;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectMaxXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.Rect self = (UnityEngine.Rect)checkSelf(l);
                var v = self.max;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectMinXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.Rect self = (UnityEngine.Rect)checkSelf(l);
                var v = self.min;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectPositionXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.Rect self = (UnityEngine.Rect)checkSelf(l);
                var v = self.position;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RectSizeXY_s(IntPtr l)
        {
            try
            {
                UnityEngine.Rect self = (UnityEngine.Rect)checkSelf(l);
                var v = self.size;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                return 2;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int BoundsCenterXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Bounds self = (UnityEngine.Bounds)checkSelf(l);
                var v = self.center;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int BoundsCenterAddOffset_s(IntPtr l)
        {
            try
            {
                UnityEngine.Bounds self;
                checkValueType(l,1,out self);
                UnityEngine.Vector3 a1;
				checkType(l,2,out a1);    
                self.center = self.center + a1;
                setBack(l,self);
                return 0;
                // var v = self.center;
                // LuaDLL.lua_pushnumber(l, v.x);
                // LuaDLL.lua_pushnumber(l, v.y);
                // LuaDLL.lua_pushnumber(l, v.z);
                // return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int BoundsExtentsXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.Bounds self = (UnityEngine.Bounds)checkSelf(l);
                var v = self.extents;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RaycastHitPointXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.RaycastHit self = (UnityEngine.RaycastHit)checkSelf(l);
                var v = self.point;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int RaycastHitNormalXYZ_s(IntPtr l)
        {
            try
            {
                UnityEngine.RaycastHit self = (UnityEngine.RaycastHit)checkSelf(l);
                var v = self.normal;
                LuaDLL.lua_pushnumber(l, v.x);
                LuaDLL.lua_pushnumber(l, v.y);
                LuaDLL.lua_pushnumber(l, v.z);
                return 3;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int InputGetTouch_s(IntPtr l) {
#if PROFILE_FILE
            Profiler.BeginSample("UnityCall");
            Profiler.BeginSample("LuaUtils.InputGetTouch");
#endif
            try {
                checkType(l,1,out sharedInt32);
                var ret=UnityEngine.Input.GetTouch(sharedInt32);
                pushValue(l,ret);
#if PROFILE_FILE
                Profiler.EndSample();
                Profiler.EndSample();
#endif
                return 1;
            }
            catch(Exception e) {
#if PROFILE_FILE
                Profiler.EndSample();
                Profiler.EndSample();
#endif
                return error(l,e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int InputGetKeyDown_s(IntPtr l) {
#if PROFILE_FILE
            Profiler.BeginSample("UnityCall");
            Profiler.BeginSample("LuaUtils.InputGetKeyDown");
#endif
            try {
                int argc = LuaDLL.lua_gettop(l);
                if(matchType(l,argc,1,typeof(UnityEngine.KeyCode))){
                    UnityEngine.KeyCode a1;
                    checkEnum(l,1,out a1);
                    var ret=UnityEngine.Input.GetKeyDown(a1);
                    pushValue(l,ret);
#if PROFILE_FILE
                    Profiler.EndSample();
                    Profiler.EndSample();
#endif
                    return 1;
                }
                else if(matchType(l,argc,1,typeof(string))){
                    checkType(l,1,out sharedString);
                    var ret=UnityEngine.Input.GetKeyDown(sharedString);
                    pushValue(l,ret);
#if PROFILE_FILE
                    Profiler.EndSample();
                    Profiler.EndSample();
#endif
                    return 1;
                }
#if PROFILE_FILE
                Profiler.EndSample();
                Profiler.EndSample();
#endif
                return error(l,"No matched override function to call");
            }
            catch(Exception e) {
#if PROFILE_FILE
                Profiler.EndSample();
                Profiler.EndSample();
#endif
                return error(l,e);
            }
        }
            
        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int InputGetButtonDown_s(IntPtr l) {
#if PROFILE_FILE
            Profiler.BeginSample("UnityCall");
            Profiler.BeginSample("LuaUtils.InputGetButtonDown");
#endif
            try {
                checkType(l,1,out sharedString);
                var ret=UnityEngine.Input.GetButtonDown(sharedString);
                pushValue(l,ret);
#if PROFILE_FILE
                Profiler.EndSample();
                Profiler.EndSample();
#endif
                return 1;
            }
            catch(Exception e) {
#if PROFILE_FILE
                Profiler.EndSample();
                Profiler.EndSample();
#endif
                return error(l,e);
            }
        }

        [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
        static public int PerfTest1_s(IntPtr l)
        {
            try
            {
                System.String a1;
                System.String a2;
                System.Int32 a3;
                checkType(l,1,out a1);
                checkType(l,2,out a2);
                checkType(l,3,out a3);
                for (int i = 1; i <= a3; ++i) {
                    var go = GameObject.Find(a1);
                    var comp = go.GetComponent<UnityEngine.UI.Text>();
                    comp.text = a2;
                }
                return 0;
            }
            catch (Exception e)
            {
                return error(l, e);
            }
        }

        static public void reg(IntPtr l)
        {
            getTypeTable(l, "LBoot.LuaUtils");

            addMember(l, ByteArrayToLuaString_s);
            addMember(l, ByteArrayLength_s);
            addMember(l, GCCollect_s);
            addMember(l, GCWaitForPendingFinalizers_s);
            addMember(l, GetTotalMemory_s);
            addMember(l, DisposeLuaTable_s);
            addMember(l, DisposeLuaFunction_s);
            addMember(l, DisposeLuaDelegate_s);
            addMember(l, DisposeLuaThread_s);

            addMember(l, TransformPositionXYZ_s);
            addMember(l, TransformLocalPositionXYZ_s);
            addMember(l, TransformForwardXYZ_s);
            addMember(l, TransformRightXYZ_s);
            addMember(l, TransformUpXYZ_s);
            addMember(l, TransformEulerAnglesXYZ_s);
            addMember(l, TransformLocalEulerAnglesXYZ_s);
            addMember(l, TransformLossyScaleXYZ_s);
            addMember(l, TransformLocalScaleXYZ_s);
            addMember(l, TransformRotationXYZW_s);
            addMember(l, TransformLocalRotationXYZW_s);

            addMember(l, RectTransformAnchoredPositionXY_s);
            addMember(l, RectTransformAnchoredPosition3DXYZ_s);
            addMember(l, RectTransformAnchorMaxXY_s);
            addMember(l, RectTransformAnchorMinXY_s);
            addMember(l, RectTransformOffsetMaxXY_s);
            addMember(l, RectTransformOffsetMinXY_s);
            addMember(l, RectTransformPivotXY_s);
            addMember(l, RectTransformRectXYWH_s);
            addMember(l, RectTransformSizeDeltaXY_s);

            addMember(l, RectCenterXY_s);
            addMember(l, RectMaxXY_s);
            addMember(l, RectMinXY_s);
            addMember(l, RectPositionXY_s);
            addMember(l, RectSizeXY_s);

            addMember(l, BoundsCenterXYZ_s);
            addMember(l, BoundsCenterAddOffset_s);
            addMember(l, BoundsExtentsXYZ_s);

            addMember(l, RaycastHitPointXYZ_s);
            addMember(l, RaycastHitNormalXYZ_s);

            addMember(l, InputGetTouch_s);
            addMember(l, InputGetKeyDown_s);
            addMember(l, InputGetButtonDown_s);

            addMember(l, PerfTest1_s);

            createTypeMetatable(l, constructor, typeof(LBoot.LuaUtils));
        }
    }
}

